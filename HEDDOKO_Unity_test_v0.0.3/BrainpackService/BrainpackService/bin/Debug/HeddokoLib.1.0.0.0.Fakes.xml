<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HeddokoLib.1.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:HeddokoLib.adt.Fakes.ShimCircularQueue`1">
            <summary>Shim type of HeddokoLib.adt.CircularQueue`1</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimCircularQueue`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimCircularQueue`1.#ctor(HeddokoLib.adt.CircularQueue{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.AllowOverflowGet">
            <summary>Sets the shim of CircularQueue`1.get_AllowOverflow()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.AllowOverflowSetBoolean">
            <summary>Sets the shim of CircularQueue`1.set_AllowOverflow(Boolean value)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.CapacityGet">
            <summary>Sets the shim of CircularQueue`1.get_Capacity()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.CapacitySetInt32">
            <summary>Sets the shim of CircularQueue`1.set_Capacity(Int32 value)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.CirclQueueGet">
            <summary>Sets the shim of CircularQueue`1.get_CirclQueue()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.Clear">
            <summary>Sets the shim of CircularQueue`1.Clear()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.ContainsT0">
            <summary>Sets the shim of CircularQueue`1.Contains(!0 vObj)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.CopyToT0Array">
            <summary>Sets the shim of CircularQueue`1.CopyTo(!0[] vA)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.CopyToT0ArrayInt32">
            <summary>Sets the shim of CircularQueue`1.CopyTo(!0[] vA, Int32 vIndex)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.CopyToT0ArrayInt32Int32">
            <summary>Sets the shim of CircularQueue`1.CopyTo(!0[] vA, Int32 vArrayIndex, Int32 vLength)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.CountGet">
            <summary>Sets the shim of CircularQueue`1.get_Count()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.CountSystemCollectionsGenericICollectionTget">
            <summary>Sets the shim of CircularQueue`1.System.Collections.Generic.ICollection&lt;T&gt;.get_Count()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.Dequeue">
            <summary>Sets the shim of CircularQueue`1.Dequeue()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.DequeueT0ArrayRef">
            <summary>Sets the shim of CircularQueue`1.Dequeue(!0[]&amp; tA)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.DequeueT0ArrayRefInt32Int32">
            <summary>Sets the shim of CircularQueue`1.Dequeue(!0[]&amp; tA, Int32 offset, Int32 length)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.EnqueueT0">
            <summary>Sets the shim of CircularQueue`1.Enqueue(!0 vItem)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.EnqueueT0Array">
            <summary>Sets the shim of CircularQueue`1.Enqueue(!0[] vA)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.EnqueueT0ArrayInt32Int32">
            <summary>Sets the shim of CircularQueue`1.Enqueue(!0[] vA, Int32 vOffset, Int32 vLength)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.GetEnumerator">
            <summary>Sets the shim of CircularQueue`1.GetEnumerator()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.IsFull">
            <summary>Sets the shim of CircularQueue`1.IsFull()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Sets the shim of CircularQueue`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.Peek">
            <summary>Sets the shim of CircularQueue`1.Peek()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.SkipInt32">
            <summary>Sets the shim of CircularQueue`1.Skip(Int32 nAmount)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.SystemCollectionsGenericICollectionTAddT0">
            <summary>Sets the shim of CircularQueue`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(!0 vItem)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.SystemCollectionsGenericICollectionTRemoveT0">
            <summary>Sets the shim of CircularQueue`1.System.Collections.Generic.ICollection&lt;T&gt;.Remove(!0 item)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.SystemCollectionsGenericIEnumerableTGetEnumerator">
            <summary>Sets the shim of CircularQueue`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of CircularQueue`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllInstances.ToArray">
            <summary>Sets the shim of CircularQueue`1.ToArray()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllowOverflowGet">
            <summary>Sets the shim of CircularQueue`1.get_AllowOverflow()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.AllowOverflowSetBoolean">
            <summary>Sets the shim of CircularQueue`1.set_AllowOverflow(Boolean value)</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimCircularQueue`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimCircularQueue`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimCircularQueue`1.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimCircularQueue`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimCircularQueue`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.CapacityGet">
            <summary>Sets the shim of CircularQueue`1.get_Capacity()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.CapacitySetInt32">
            <summary>Sets the shim of CircularQueue`1.set_Capacity(Int32 value)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.CirclQueueGet">
            <summary>Sets the shim of CircularQueue`1.get_CirclQueue()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.Clear">
            <summary>Sets the shim of CircularQueue`1.Clear()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.Constructor">
            <summary>Sets the shim of CircularQueue`1.CircularQueue`1()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.ConstructorBoolean">
            <summary>Sets the shim of CircularQueue`1.CircularQueue`1(Boolean vAllowOverflow)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.ConstructorInt32">
            <summary>Sets the shim of CircularQueue`1.CircularQueue`1(Int32 vCapacity)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.ConstructorInt32Boolean">
            <summary>Sets the shim of CircularQueue`1.CircularQueue`1(Int32 vCapacity, Boolean vAllowOverflow)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.ContainsT0">
            <summary>Sets the shim of CircularQueue`1.Contains(!0 vObj)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.CopyToT0Array">
            <summary>Sets the shim of CircularQueue`1.CopyTo(!0[] vA)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.CopyToT0ArrayInt32">
            <summary>Sets the shim of CircularQueue`1.CopyTo(!0[] vA, Int32 vIndex)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.CopyToT0ArrayInt32Int32">
            <summary>Sets the shim of CircularQueue`1.CopyTo(!0[] vA, Int32 vArrayIndex, Int32 vLength)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.CountGet">
            <summary>Sets the shim of CircularQueue`1.get_Count()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.CountSystemCollectionsGenericICollectionTget">
            <summary>Sets the shim of CircularQueue`1.System.Collections.Generic.ICollection&lt;T&gt;.get_Count()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.Dequeue">
            <summary>Sets the shim of CircularQueue`1.Dequeue()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.DequeueT0ArrayRef">
            <summary>Sets the shim of CircularQueue`1.Dequeue(!0[]&amp; tA)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.EnqueueT0">
            <summary>Sets the shim of CircularQueue`1.Enqueue(!0 vItem)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.EnqueueT0Array">
            <summary>Sets the shim of CircularQueue`1.Enqueue(!0[] vA)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.EnqueueT0ArrayInt32Int32">
            <summary>Sets the shim of CircularQueue`1.Enqueue(!0[] vA, Int32 vOffset, Int32 vLength)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.GetEnumerator">
            <summary>Sets the shim of CircularQueue`1.GetEnumerator()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.IsFull">
            <summary>Sets the shim of CircularQueue`1.IsFull()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.IsReadOnlySystemCollectionsGenericICollectionTget">
            <summary>Sets the shim of CircularQueue`1.System.Collections.Generic.ICollection&lt;T&gt;.get_IsReadOnly()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.Peek">
            <summary>Sets the shim of CircularQueue`1.Peek()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.SkipInt32">
            <summary>Sets the shim of CircularQueue`1.Skip(Int32 nAmount)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.SystemCollectionsGenericICollectionTAddT0">
            <summary>Sets the shim of CircularQueue`1.System.Collections.Generic.ICollection&lt;T&gt;.Add(!0 vItem)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.SystemCollectionsGenericICollectionTRemoveT0">
            <summary>Sets the shim of CircularQueue`1.System.Collections.Generic.ICollection&lt;T&gt;.Remove(!0 item)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.SystemCollectionsGenericIEnumerableTGetEnumerator">
            <summary>Sets the shim of CircularQueue`1.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of CircularQueue`1.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueue`1.ToArray">
            <summary>Sets the shim of CircularQueue`1.ToArray()</summary>
        </member>
        <member name="T:HeddokoLib.adt.Fakes.ShimCircularQueueOverflowException">
            <summary>Shim type of HeddokoLib.adt.CircularQueueOverflowException</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimCircularQueueOverflowException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimCircularQueueOverflowException.#ctor(HeddokoLib.adt.CircularQueueOverflowException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:HeddokoLib.adt.Fakes.ShimCircularQueueOverflowException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimCircularQueueOverflowException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimCircularQueueOverflowException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueueOverflowException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimCircularQueueOverflowException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimCircularQueueOverflowException.Constructor">
            <summary>Sets the shim of CircularQueueOverflowException.CircularQueueOverflowException()</summary>
        </member>
        <member name="T:HeddokoLib.adt.Fakes.ShimEmptyCircularQueueException">
            <summary>Shim type of HeddokoLib.adt.EmptyCircularQueueException</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimEmptyCircularQueueException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimEmptyCircularQueueException.#ctor(HeddokoLib.adt.EmptyCircularQueueException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:HeddokoLib.adt.Fakes.ShimEmptyCircularQueueException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimEmptyCircularQueueException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimEmptyCircularQueueException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimEmptyCircularQueueException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.ShimEmptyCircularQueueException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.ShimEmptyCircularQueueException.Constructor">
            <summary>Sets the shim of EmptyCircularQueueException.EmptyCircularQueueException()</summary>
        </member>
        <member name="T:HeddokoLib.adt.Fakes.StubCircularQueue`1">
            <summary>Stub type of HeddokoLib.adt.CircularQueue`1</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubCircularQueue`1.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubCircularQueue`1.#ctor(System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubCircularQueue`1.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubCircularQueue`1.#ctor(System.Int32,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubCircularQueue`1.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubCircularQueue`1.InitializeStub">
            <summary>Initializes a new instance of type StubCircularQueue</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubCircularQueue`1.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubCircularQueue`1.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException">
            <summary>Stub type of HeddokoLib.adt.CircularQueueOverflowException</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubCircularQueueOverflowException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubCircularQueueOverflowException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.InitializeStub">
            <summary>Initializes a new instance of type StubCircularQueueOverflowException</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubCircularQueueOverflowException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException">
            <summary>Stub type of HeddokoLib.adt.EmptyCircularQueueException</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubEmptyCircularQueueException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubEmptyCircularQueueException.Source as a property with a backing field.</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.InitializeStub">
            <summary>Initializes a new instance of type StubEmptyCircularQueueException</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="P:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:HeddokoLib.adt.Fakes.StubEmptyCircularQueueException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="T:HeddokoLib.networking.Fakes.ShimCommand">
            <summary>Shim type of HeddokoLib.networking.Command</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.ShimCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.ShimCommand.#ctor(HeddokoLib.networking.Command)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:HeddokoLib.networking.Fakes.ShimCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimCommand.AllInstances.Clear">
            <summary>Sets the shim of Command.Clear()</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimCommand.AllInstances.ProcessObjectHeddokoPacket">
            <summary>Sets the shim of Command.Process(Object vSender, HeddokoPacket vPacket)</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimCommand.AllInstances.RegisterStringCommandDelegate">
            <summary>Sets the shim of Command.Register(String vCommand, CommandDelegate vFunc)</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.ShimCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.ShimCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimCommand.Clear">
            <summary>Sets the shim of Command.Clear()</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimCommand.Constructor">
            <summary>Sets the shim of Command.Command()</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimCommand.ProcessCommandObjectHeddokoPacket">
            <summary>Sets the shim of Command.ProcessCommand(Object vSender, HeddokoPacket vPacket)</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimCommand.ProcessObjectHeddokoPacket">
            <summary>Sets the shim of Command.Process(Object vSender, HeddokoPacket vPacket)</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimCommand.RegisterCommandStringCommandDelegate">
            <summary>Sets the shim of Command.RegisterCommand(String vCommand, CommandDelegate vFunc)</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimCommand.RegisterStringCommandDelegate">
            <summary>Sets the shim of Command.Register(String vCommand, CommandDelegate vFunc)</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimCommand.StaticConstructor">
            <summary>Sets the shim of Command.Command()</summary>
        </member>
        <member name="T:HeddokoLib.networking.Fakes.ShimHeddokoPacket">
            <summary>Shim type of HeddokoLib.networking.HeddokoPacket</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.ShimHeddokoPacket.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.ShimHeddokoPacket.#ctor(HeddokoLib.networking.HeddokoPacket)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:HeddokoLib.networking.Fakes.ShimHeddokoPacket.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.ShimHeddokoPacket.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.ShimHeddokoPacket.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimHeddokoPacket.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimHeddokoPacket.ConstructorByteArrayInt32">
            <summary>Sets the shim of HeddokoPacket.HeddokoPacket(Byte[] dataBytes, Int32 vCommandLength)</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimHeddokoPacket.ConstructorStringByteArray">
            <summary>Sets the shim of HeddokoPacket.HeddokoPacket(String vCommand, Byte[] vPayload)</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimHeddokoPacket.ConstructorStringString">
            <summary>Sets the shim of HeddokoPacket.HeddokoPacket(String vCommand, String vPacket)</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimHeddokoPacket.UnwrapByteArray">
            <summary>Sets the shim of HeddokoPacket.Unwrap(Byte[] vBytes)</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimHeddokoPacket.UnwrapRemovedCommandString">
            <summary>Sets the shim of HeddokoPacket.UnwrapRemovedCommand(String vWrappedString)</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimHeddokoPacket.UnwrapString">
            <summary>Sets the shim of HeddokoPacket.Unwrap(String vWrappedString)</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimHeddokoPacket.WrapHeddokoPacket">
            <summary>Sets the shim of HeddokoPacket.Wrap(HeddokoPacket vPacket)</summary>
        </member>
        <member name="T:HeddokoLib.networking.Fakes.ShimPacketSetting">
            <summary>Shim type of HeddokoLib.networking.PacketSetting</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.ShimPacketSetting.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.ShimPacketSetting.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.ShimPacketSetting.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimPacketSetting.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.ShimPacketSetting.StaticConstructor">
            <summary>Sets the shim of PacketSetting.PacketSetting()</summary>
        </member>
        <member name="T:HeddokoLib.networking.Fakes.StubCommand">
            <summary>Stub type of HeddokoLib.networking.Command</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.StubCommand.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.StubCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.StubCommand.InitializeStub">
            <summary>Initializes a new instance of type StubCommand</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.StubCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.StubCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:HeddokoLib.networking.Fakes.StubHeddokoPacket">
            <summary>Stub type of HeddokoLib.networking.HeddokoPacket</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.StubHeddokoPacket.#ctor(System.Byte[],System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.StubHeddokoPacket.#ctor(System.String,System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.StubHeddokoPacket.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.StubHeddokoPacket.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:HeddokoLib.networking.Fakes.StubHeddokoPacket.InitializeStub">
            <summary>Initializes a new instance of type StubHeddokoPacket</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.StubHeddokoPacket.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:HeddokoLib.networking.Fakes.StubHeddokoPacket.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:HeddokoLib.utils.Fakes.ShimConversionTools">
            <summary>Shim type of HeddokoLib.utils.ConversionTools</summary>
        </member>
        <member name="M:HeddokoLib.utils.Fakes.ShimConversionTools.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:HeddokoLib.utils.Fakes.ShimConversionTools.#ctor(HeddokoLib.utils.ConversionTools)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:HeddokoLib.utils.Fakes.ShimConversionTools.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:HeddokoLib.utils.Fakes.ShimConversionTools.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:HeddokoLib.utils.Fakes.ShimConversionTools.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:HeddokoLib.utils.Fakes.ShimConversionTools.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:HeddokoLib.utils.Fakes.ShimConversionTools.Constructor">
            <summary>Sets the shim of ConversionTools.ConversionTools()</summary>
        </member>
        <member name="P:HeddokoLib.utils.Fakes.ShimConversionTools.ConvertHexStringToFloatString">
            <summary>Sets the shim of ConversionTools.ConvertHexStringToFloat(String vHexVal)</summary>
        </member>
        <member name="T:HeddokoLib.utils.Fakes.ShimHeddokoCommands">
            <summary>Shim type of HeddokoLib.utils.HeddokoCommands</summary>
        </member>
        <member name="M:HeddokoLib.utils.Fakes.ShimHeddokoCommands.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:HeddokoLib.utils.Fakes.ShimHeddokoCommands.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:HeddokoLib.utils.Fakes.ShimHeddokoCommands.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:HeddokoLib.utils.Fakes.ShimHeddokoCommands.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:HeddokoLib.utils.Fakes.ShimHeddokoCommands.ExtractCommandFromBytesInt32Int32ByteArray">
            <summary>Sets the shim of HeddokoCommands.ExtractCommandFromBytes(Int32 vStartIndex, Int32 vLength, Byte[] vData)</summary>
        </member>
        <member name="P:HeddokoLib.utils.Fakes.ShimHeddokoCommands.StaticConstructor">
            <summary>Sets the shim of HeddokoCommands.HeddokoCommands()</summary>
        </member>
        <member name="T:HeddokoLib.utils.Fakes.StubConversionTools">
            <summary>Stub type of HeddokoLib.utils.ConversionTools</summary>
        </member>
        <member name="M:HeddokoLib.utils.Fakes.StubConversionTools.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:HeddokoLib.utils.Fakes.StubConversionTools.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:HeddokoLib.utils.Fakes.StubConversionTools.InitializeStub">
            <summary>Initializes a new instance of type StubConversionTools</summary>
        </member>
        <member name="P:HeddokoLib.utils.Fakes.StubConversionTools.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:HeddokoLib.utils.Fakes.StubConversionTools.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.HeddokoLibDelegates">
            <summary>Contains custom delegates used for the stubs and shims of HeddokoLib</summary>
        </member>
    </members>
</doc>
